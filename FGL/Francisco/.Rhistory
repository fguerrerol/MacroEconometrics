pars.S <- solve(SVAR$A, pars.R) # Structural Form VAR
pars.R
pars.S
pars.R <- Bcoef(VAR1) # Reduced Form VAR
pars.S <- solve(SVAR$A, pars.R) # Structural Form VAR
pars.R
pars.S
# IRF
IRF <- SVAR.sirf(SVAR, H)
View(SVAR.sirf.boot)
View(SVAR.sirf)
SVAR$var$p
VAR.coefficients(SVAR$var)
View(VAR.coefficients)
VAR.coefficients(SVAR)
VAR.coefficients(SVAR$var)
SVAR$var
SVAR$var$p
wash(Bcoef(SVAR$var))
p<- var_1$selection[1] # AIC(n)
# IRF
IRF <- SVAR.sirf(SVAR, H)
Splot.sirf(IRF, 6, H)
plot.sirf(IRF, 6, H)
# IRF
IRF <- SVAR.sirf(SVAR, H)
library("readxl")
library("tstools")
library("xts")
library("zoo")
library("vars")
setwd("/home/francisco/Documentos/MEcon/T3/MacroEconometrics/Ejercitaciones/Ej1/Series")
df <- read_excel("data0.xlsx")
my_data = ts(df, start = c(2001, 1) , end=c(2019,12), frequency = 12)
plot (my_data[,2])
### Conversi?n de los datos ###
# precios del cobre
my_data[,c(3)] <- log(my_data[,c(3)])*100
# Imacec no minero
my_data[,c(5)] <- log(my_data[,c(5)])*100
# IPC SAE
my_data[,c(6)] <- log(my_data[,c(6)])*100
# TCN
my_data[,c(7)] <- log(my_data[,c(7)])*100
#### Punto 2 ####
### graficos en niveles ###
par(mfrow=c(4,2),mar=c(2, 2, 2, 2))
ts.plot(my_data[,c(2)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de EEUU")
ts.plot(my_data[,c(3)], type="l", lwd=2, xlab="",ylab="$",bty="n", main = "Precio del cobre en ln por 100")
ts.plot(my_data[,c(4)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Incide EMBI Global")
ts.plot(my_data[,c(5)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "IMACEC no minero en ln por 100")
ts.plot(my_data[,c(6)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "IPC SAE en ln por 100")
ts.plot(my_data[,c(7)], type="l", lwd=2, xlab="",ylab="$",bty="n", main = "TCN en ln por 100")
ts.plot(my_data[,c(8)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "Indice EMBI Chile ")
ts.plot(my_data[,c(9)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de Chile")
### tests de raiz unitaria ###
library(urca)
### r* es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,2]),type="none",selectlags="BIC")) #rechaza h0 al 10%
summary(ur.df((my_data[,2]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,2]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,2])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,2])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,2])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln(precio del cobre)*100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,3]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,3]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,3]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,3])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,3])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,3])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### Indice EMBI Global es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,4]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,4]),type="drift",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((my_data[,4]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,4])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,4])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,4])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln ( Indice IMACEC no minero, desestacionalizado) *100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,5]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,5]),type="drift",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((my_data[,5]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,5])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,5])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,5])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln (IPC SAE )* 100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,6]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,6]),type="drift",selectlags="BIC")) # # no rechaza h0
summary(ur.df((my_data[,6]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,6])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,6])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,6])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln (TCN)* 100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,7]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,7]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,7]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,7])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,7])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,7])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### Indice EMBI Chile es I(1) al nivel del 1%, es I(0) al nivel 5% ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,8]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,8]),type="drift",selectlags="BIC")) # rechaza h0 al 5%
summary(ur.df((my_data[,8]),type="trend",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((diff(my_data[,8])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,8])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,8])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.pp(my_data[,8], type="Z-tau", model="trend",lags="long"))
summary(ur.pp(diff(my_data[,8]), type="Z-tau", model="constant",lags="long"))
summary(ur.kpss(my_data[,8],type="tau",lags="long"))
summary(ur.kpss(diff(my_data[,8]),type="mu",lags="long"))
### Tasa de Politica Monetaria de Chile es I(1) al 1%, I(0) al 5% ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,9]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,9]),type="drift",selectlags="BIC")) # rechaza h0 al 5%
summary(ur.df((my_data[,9]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,9])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,9])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,9])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### graficos de series en diferencias ###
par(mfrow=c(4,2),mar=c(2, 2, 2, 2))
ts.plot(diff(my_data[,c(2)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de EEUU")
ts.plot(diff(my_data[,c(3)]), type="l", lwd=2, xlab="",ylab="$",bty="n", main = "Precio del cobre en ln por 100")
ts.plot(diff(my_data[,c(4)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Incide EMBI Global")
ts.plot(diff(my_data[,c(5)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "IMACEC no minero en ln por 100")
ts.plot(diff(my_data[,c(6)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "IPC SAE en ln por 100")
ts.plot(diff(my_data[,c(7)]), type="l", lwd=2, xlab="",ylab="$",bty="n", main = "TCN en ln por 100")
ts.plot(diff(my_data[,c(8)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "Indice EMBI Chile ")
ts.plot(diff(my_data[,c(9)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de Chile")
# hay que incluir las series en diferencias para que sean estacionarias
#### Punto 3 version Mariana ####
diff_imacec.log <-diff(my_data[,c(5)])
dum2 <- data.frame(time=time(diff_imacec.log),
Value=as.matrix(diff_imacec.log))
dum2 <- as.character.Date(dum2)
dum2$d1 <- ifelse(dum2$time=="2010.167",1,0)
dum2$d2 <- ifelse(dum2$time=="2010.250",1,0)
dum2$d3 <- ifelse(dum2$time=="2019.917",1,0)
dum2$d4 <- ifelse(dum2$time=="2019.750",1,0)
reg2 <- lm(dum2$Value~dum2$d1+dum2$d2+dum2$d3+dum2$d4)
new_imac2 <- reg2$residuals
new_imac2 <- ts(new_imac2, start=c(2001,02), frequency = 12)
par(mfrow=c(3,1))
ts.plot(new_imac2, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Ellos")
ts.plot(imacec_limpio, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Nuestro")
ts.plot(imacec_limpio - new_imac2 , type="l", lwd=2, xlab="",ylab="",bty="n", main = "resta")
# Para el documento
descarte <- ts(reg2[["fitted.values"]], start=c(2001,02),end=c(2019,12), frequency=12)
par(mfrow=c(3,1))
ts.plot(diff(my_data[,c(5)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "Imacec no minero en ln por 100")
ts.plot(new_imac2, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Residuos - Imacec no minero limpio")
ts.plot(descarte, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Terremoto y conflicto social sobre Imacec no minero")
#### punto 4 ####
# Modelo 1 : la internacional es TPM_USA
tpm_usa     = ts(diff(my_data[,c(2)]),start=c(2001,02),frequency=12)
embi_global = ts(diff(my_data[,c(4)]),start=c(2001,02),frequency=12)
cobre       = ts(diff(my_data[,c(3)]),start=c(2001,02),frequency=12)
tpm_chile =   ts(diff(my_data[,c(9)]),start=c(2001,02),frequency=12)
embi_chile =  ts(diff(my_data[,c(8)]),start=c(2001,02),frequency=12)
tcn =         ts(diff(my_data[,c(7)]),start=c(2001,02),frequency=12)
ipc_sae =     ts(diff(my_data[,c(6)]),start=c(2001,02),frequency=12)
modelo_1 <- cbind(tpm_usa,
new_imac2,
ipc_sae, tcn,
embi_chile, tpm_chile)
library(vars)
var_1 <- VARselect(modelo_1, lag.max = 15, type = "const")
var_1
p<- var_1$selection[1] # AIC(n)
# El mejor modelo uno es un VAR(3) segun AIC(n)
VAR1 <- VAR(modelo_1, p = p_1, type = "const")
summary(VAR1)
# Manual plotting of residuals
e <- resid(VAR1)
e <- ts(e, end = end(modelo_1), frequency = frequency(modelo_1))
colnames(e) <- c(1,2,3,4,5,6)
plot(e, main = "Residuals")
m <- VAR1$K # Number of variables in the VAR
T <- VAR1$obs # Number of effective sample observations, excluding "p" starting values
VAR.GC.test.boot <- causality(VAR1, cause = c("ipc_sae",
"new_imac2",
"tcn",
"embi_chile",
"tpm_chile")
, boot = TRUE, boot.runs = 2000)
VAR.GC.test.boot
matC <- function(m, p, vx) {
vy <- setdiff(1:m, vx)
Cm <- matrix(1, m, m * p + 1)
for (i in vx) {
for (l in 1:p) {
for (j in vy) {
Cm[i, m * (l - 1) + j] <- 0
}
}
}
Cm
}
constraints <- matC(m, p_1, 1)
VAR1a <- restrict(VAR1, method = "man", resmat = constraints)
VAR1a
roots(VAR1a, modulus = TRUE)
setwd("/home/francisco/Documentos/MEcon/T3/MacroEconometrics/FGL/Francisco")
source("PS2_SVAR_Tools.R")
source("PS2_SVAR_Plots.R")
IRF <- SVAR.sirf(SVAR, H)
plot.sirf(IRF, m, H)
######
# VAR Estimation (Structural Form) ####
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
pars.R <- Bcoef(VAR1) # Reduced Form VAR
pars.S <- solve(SVAR$A, pars.R) # Structural Form VAR
pars.R
pars.S
# SVAR Estimation (AB model configuration)
SVAR <- SVAR(VAR1, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
SVAR
P <- solve(SVAR$A, SVAR$B) # inv(A) %*% B
S.SVAR <- P %*% t(P)
S.SVAR
H <- 24 # Horizon
H.ERPT <- 240 # Horizon (ERPT)
# IRF
IRF <- SVAR.sirf(SVAR, H)
plot.sirf(IRF, 6, H)
View(var2vma)
library("readxl")
library("tstools")
library("xts")
library("zoo")
library("vars")
setwd("/home/francisco/Documentos/MEcon/T3/MacroEconometrics/Ejercitaciones/Ej1/Series")
df <- read_excel("data0.xlsx")
my_data = ts(df, start = c(2001, 1) , end=c(2019,12), frequency = 12)
plot (my_data[,2])
### Conversi?n de los datos ###
# precios del cobre
my_data[,c(3)] <- log(my_data[,c(3)])*100
# Imacec no minero
my_data[,c(5)] <- log(my_data[,c(5)])*100
# IPC SAE
my_data[,c(6)] <- log(my_data[,c(6)])*100
# TCN
my_data[,c(7)] <- log(my_data[,c(7)])*100
#### Punto 2 ####
### graficos en niveles ###
par(mfrow=c(4,2),mar=c(2, 2, 2, 2))
ts.plot(my_data[,c(2)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de EEUU")
ts.plot(my_data[,c(3)], type="l", lwd=2, xlab="",ylab="$",bty="n", main = "Precio del cobre en ln por 100")
ts.plot(my_data[,c(4)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Incide EMBI Global")
ts.plot(my_data[,c(5)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "IMACEC no minero en ln por 100")
ts.plot(my_data[,c(6)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "IPC SAE en ln por 100")
ts.plot(my_data[,c(7)], type="l", lwd=2, xlab="",ylab="$",bty="n", main = "TCN en ln por 100")
ts.plot(my_data[,c(8)], type="l", lwd=2, xlab="",ylab="",bty="n", main = "Indice EMBI Chile ")
ts.plot(my_data[,c(9)], type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de Chile")
### tests de raiz unitaria ###
library(urca)
### r* es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,2]),type="none",selectlags="BIC")) #rechaza h0 al 10%
summary(ur.df((my_data[,2]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,2]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,2])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,2])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,2])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln(precio del cobre)*100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,3]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,3]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,3]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,3])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,3])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,3])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### Indice EMBI Global es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,4]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,4]),type="drift",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((my_data[,4]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,4])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,4])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,4])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln ( Indice IMACEC no minero, desestacionalizado) *100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,5]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,5]),type="drift",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((my_data[,5]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,5])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,5])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,5])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln (IPC SAE )* 100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,6]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,6]),type="drift",selectlags="BIC")) # # no rechaza h0
summary(ur.df((my_data[,6]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,6])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,6])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,6])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### ln (TCN)* 100 es I(1) ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,7]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,7]),type="drift",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,7]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,7])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,7])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,7])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### Indice EMBI Chile es I(1) al nivel del 1%, es I(0) al nivel 5% ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,8]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,8]),type="drift",selectlags="BIC")) # rechaza h0 al 5%
summary(ur.df((my_data[,8]),type="trend",selectlags="BIC")) # rechaza h0 al 10%
summary(ur.df((diff(my_data[,8])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,8])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,8])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.pp(my_data[,8], type="Z-tau", model="trend",lags="long"))
summary(ur.pp(diff(my_data[,8]), type="Z-tau", model="constant",lags="long"))
summary(ur.kpss(my_data[,8],type="tau",lags="long"))
summary(ur.kpss(diff(my_data[,8]),type="mu",lags="long"))
### Tasa de Politica Monetaria de Chile es I(1) al 1%, I(0) al 5% ###
### ADF (Augmented Dickey-Fuller)  h0 = no estacionariedad ###
summary(ur.df((my_data[,9]),type="none",selectlags="BIC")) # no rechaza h0
summary(ur.df((my_data[,9]),type="drift",selectlags="BIC")) # rechaza h0 al 5%
summary(ur.df((my_data[,9]),type="trend",selectlags="BIC")) # no rechaza h0
summary(ur.df((diff(my_data[,9])),type="none",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,9])),type="drift",selectlags="BIC")) # rechaza h0 al 1%
summary(ur.df((diff(my_data[,9])),type="trend",selectlags="BIC")) # rechaza h0 al 1%
### graficos de series en diferencias ###
par(mfrow=c(4,2),mar=c(2, 2, 2, 2))
ts.plot(diff(my_data[,c(2)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de EEUU")
ts.plot(diff(my_data[,c(3)]), type="l", lwd=2, xlab="",ylab="$",bty="n", main = "Precio del cobre en ln por 100")
ts.plot(diff(my_data[,c(4)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Incide EMBI Global")
ts.plot(diff(my_data[,c(5)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "IMACEC no minero en ln por 100")
ts.plot(diff(my_data[,c(6)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "IPC SAE en ln por 100")
ts.plot(diff(my_data[,c(7)]), type="l", lwd=2, xlab="",ylab="$",bty="n", main = "TCN en ln por 100")
ts.plot(diff(my_data[,c(8)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "Indice EMBI Chile ")
ts.plot(diff(my_data[,c(9)]), type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de Politica Monetaria de Chile")
# hay que incluir las series en diferencias para que sean estacionarias
#### Punto 3 version Mariana ####
diff_imacec.log <-diff(my_data[,c(5)])
dum2 <- data.frame(time=time(diff_imacec.log),
Value=as.matrix(diff_imacec.log))
dum2 <- as.character.Date(dum2)
dum2$d1 <- ifelse(dum2$time=="2010.167",1,0)
dum2$d2 <- ifelse(dum2$time=="2010.250",1,0)
dum2$d3 <- ifelse(dum2$time=="2019.917",1,0)
dum2$d4 <- ifelse(dum2$time=="2019.750",1,0)
reg2 <- lm(dum2$Value~dum2$d1+dum2$d2+dum2$d3+dum2$d4)
new_imac2 <- reg2$residuals
new_imac2 <- ts(new_imac2, start=c(2001,02), frequency = 12)
par(mfrow=c(3,1))
ts.plot(new_imac2, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Ellos")
ts.plot(imacec_limpio, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Nuestro")
ts.plot(imacec_limpio - new_imac2 , type="l", lwd=2, xlab="",ylab="",bty="n", main = "resta")
# Para el documento
descarte <- ts(reg2[["fitted.values"]], start=c(2001,02),end=c(2019,12), frequency=12)
par(mfrow=c(3,1))
ts.plot(diff(my_data[,c(5)]), type="l", lwd=2, xlab="",ylab="",bty="n", main = "Imacec no minero en ln por 100")
ts.plot(new_imac2, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Residuos - Imacec no minero limpio")
ts.plot(descarte, type="l", lwd=2, xlab="",ylab="",bty="n", main = "Terremoto y conflicto social sobre Imacec no minero")
#### punto 4 ####
# Modelo 1 : la internacional es TPM_USA
tpm_usa     = ts(diff(my_data[,c(2)]),start=c(2001,02),frequency=12)
embi_global = ts(diff(my_data[,c(4)]),start=c(2001,02),frequency=12)
cobre       = ts(diff(my_data[,c(3)]),start=c(2001,02),frequency=12)
tpm_chile =   ts(diff(my_data[,c(9)]),start=c(2001,02),frequency=12)
embi_chile =  ts(diff(my_data[,c(8)]),start=c(2001,02),frequency=12)
tcn =         ts(diff(my_data[,c(7)]),start=c(2001,02),frequency=12)
ipc_sae =     ts(diff(my_data[,c(6)]),start=c(2001,02),frequency=12)
modelo_1 <- cbind(tpm_usa,
new_imac2,
ipc_sae, tcn,
embi_chile, tpm_chile)
library(vars)
var_1 <- VARselect(modelo_1, lag.max = 15, type = "const")
var_1
p<- var_1$selection[1] # AIC(n)
# El mejor modelo uno es un VAR(3) segun AIC(n)
VAR1 <- VAR(modelo_1, p = p_1, type = "const")
summary(VAR1)
# Manual plotting of residuals
e <- resid(VAR1)
e <- ts(e, end = end(modelo_1), frequency = frequency(modelo_1))
colnames(e) <- c(1,2,3,4,5,6)
plot(e, main = "Residuals")
m <- VAR1$K # Number of variables in the VAR
T <- VAR1$obs # Number of effective sample observations, excluding "p" starting values
VAR.GC.test.boot <- causality(VAR1, cause = c("ipc_sae",
"new_imac2",
"tcn",
"embi_chile",
"tpm_chile")
, boot = TRUE, boot.runs = 2000)
VAR.GC.test.boot
matC <- function(m, p, vx) {
vy <- setdiff(1:m, vx)
Cm <- matrix(1, m, m * p + 1)
for (i in vx) {
for (l in 1:p) {
for (j in vy) {
Cm[i, m * (l - 1) + j] <- 0
}
}
}
Cm
}
constraints <- matC(m, p_1, 1)
VAR1a <- restrict(VAR1, method = "man", resmat = constraints)
VAR1a
roots(VAR1a, modulus = TRUE)
setwd("/home/francisco/Documentos/MEcon/T3/MacroEconometrics/FGL/Francisco")
source("PS2_SVAR_Tools.R")
source("PS2_SVAR_Plots.R")
IRF <- SVAR.sirf(SVAR, H)
plot.sirf(IRF, m, H)
######
# VAR Estimation (Structural Form) ####
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
pars.R <- Bcoef(VAR1) # Reduced Form VAR
pars.S <- solve(SVAR$A, pars.R) # Structural Form VAR
pars.R
pars.S
# SVAR Estimation (AB model configuration)
SVAR <- SVAR(VAR1, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
SVAR
P <- solve(SVAR$A, SVAR$B) # inv(A) %*% B
S.SVAR <- P %*% t(P)
S.SVAR
H <- 24 # Horizon
H.ERPT <- 240 # Horizon (ERPT)
# IRF
IRF <- SVAR.sirf(SVAR, H)
plot.sirf(IRF, 6, H)
Phi
P
m
p
H
# IRF
IRF <- SVAR.sirf(SVAR, H)
# IRF
IRF <- SVAR.sirf(SVAR, H)
I
var2vma(Phi,P,m,p,H)
companion(Phi,m,P)
companion(Phi,m,p)
t(solve(P, t(E)))
companion(Phi,m,p)
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
pars.R <- Bcoef(VAR1a) # Reduced Form VAR
pars.S <- solve(SVAR$A, pars.R) # Structural Form VAR
pars.R
pars.S
# SVAR Estimation (AB model configuration)
SVAR <- SVAR(VAR1a, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
SVAR
P <- solve(SVAR$A, SVAR$B) # inv(A) %*% B
S.SVAR <- P %*% t(P)
S.SVAR
H <- 24 # Horizon
H.ERPT <- 240 # Horizon (ERPT)
# IRF
IRF <- SVAR.sirf(SVAR, H)
plot.sirf(IRF, 6, H)
Amat
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
Amat
Amat[2,2] <- NA
Amat
Amat <- diag(m)
