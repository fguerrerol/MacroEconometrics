for (i in 1:m) {
Bmat[i, i] <- NA
}
### Creo y asigno el VAR estructural
SVAR <- SVAR(VAR1, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
SVAR
H.ERPT <- 12 # Horizon (ERPT)
ERPT2 <- SVAR.erpt(SVAR, H.ERPT, 3, 2)
plot.erpt2(ERPT2, H.ERPT)
ERPT3 <- SVAR.erpt(SVAR, H.ERPT, 1, 2)
#plot.erpt3(ERPT3, H.ERPT)
####  Modelo modificaado ######
### Ahora elaboro el modelo VAR pero sin un variable ###
### Para esto genero el VAR teniendo en consideracion solo ###
### Este modelo se va a llamar modelo 2 y su VAR ####
### correspondiente se va a designar VAR2####
modelo_2 <- cbind(d_l_tdc_n,
d_l_ipc)
var_2 <- VARselect(modelo_2, lag.max = 15, type = "const")
var_2
p2<- var_2$selection[2]
p2
### El valor de p2, nos dice que los rezagos adecuados son 3
### con esto se va a proceder
### Generamos el modelo y obtenemos las estadísticas sumarias
VAR2 <- VAR(modelo_2, p = p2, type = "const")
summary(VAR2)
m <- VAR2$K # Number of variables in the VAR
T <- VAR2$obs # Number of effective sample observations, excluding "p" starting values
### Ploteo los residuos del VAR
e <- resid(VAR2)
e <- ts(e, end = end(modelo_2), frequency = frequency(modelo_2))
colnames(e) <- c(1,2)
plot(e, main = "Residuals")
#### Genero esta minifuncion para restringir el feedback hacia
#### las variables locales
matC <- function(m, p, vx) {
vy <- setdiff(1:m, vx)
Cm <- matrix(1, m, m * p + 1)
for (i in vx) {
for (l in 1:p) {
for (j in vy) {
Cm[i, m * (l - 1) + j] <- 0
}
}
}
Cm
}
### Aplico la función para restringir a la matriz####
#### con la función restrict restrinjo el VAR que hize líneas atras
constraints <- matC(m, p2, 1)
VAR2 <- restrict(VAR2, method = "man", resmat = constraints)
VAR2
#### Vemos que las raíces unitarias dan menor que uno por lo tanto
#### prosigo
roots(VAR2, modulus = TRUE)
#### Genero las matrices para elaborar el VAR estructural
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
R <- 500 # Number of bootstrap replications
type <- "nonparametric"
gamma <- 0.95 # Confidence level
SVAR2 <- SVAR(VAR2, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
I.er <- SVAR.sirf.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
#I.pc <- trans.pw.boot("-", I.er, 2, 1, gamma)
#I <- list(lb = abind(I.er$lb, I.pc$lb, along = 1), pe = abind(I.er$pe, I.pc$pe, along = 1), ub = abind(I.er$ub, I.pc$ub, along = 1), boot = abind(I.er$boot, I.pc$boot, along = 2))
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
### Creo y asigno el VAR estructural
SVAR2
ERPT5 <- SVAR.erpt(SVAR2, H.ERPT, 2, 1)
plot.erpt(ERPT5, H.ERPT)
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
R <- 500 # Number of bootstrap replications
type <- "nonparametric"
gamma <- 0.95 # Confidence level
SVAR2 <- SVAR(VAR2, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
Y.boot <- boot.replicate(VAR2, R, type)
I.er <- SVAR.sirf.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
Y.boot <- boot.replicate(VAR2, R, type)
I.er <- SVAR.sirf.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
SVAR2 <- SVAR(VAR2, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
Y.boot <- boot.replicate(VAR2, R, type)
I.er <- SVAR.sirf.boot(SVAR2,Amat,Bmat, H.ERPT, gamma, Y.boot, cumulative = TRUE)
#I.pc <- trans.pw.boot("-", I.er, 2, 1, gamma)
#I <- list(lb = abind(I.er$lb, I.pc$lb, along = 1), pe = abind(I.er$pe, I.pc$pe, along = 1), ub = abind(I.er$ub, I.pc$ub, along = 1), boot = abind(I.er$boot, I.pc$boot, along = 2))
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
ERPT.boot <- trans.pw.boot("/", I.er, 1, 2, gamma)
ERPT.boot <- trans.pw.boot("/", I.er, 3, 2, gamma)
I.er <- SVAR.sirf.boot(SVAR2,Amat,Bmat, H.ERPT, gamma, Y.boot, cumulative = TRUE)
ERPT.boot <- trans.pw.boot("/", I.er, 3, 2, gamma)
ERPT.boot <- trans.pw.boot("/", I.er, 3, 2, gamma)
I.er <- SVAR.sirf.lr.boot(SVAR, H.ERPT, gamma, Y.boot, cumulative = TRUE)
I.er <- SVAR.sirf.boot(SVAR2,Amat,Bmat, H.ERPT, gamma, Y.boot, cumulative = TRUE)
ERPT.boot <- trans.pw.boot("/", I.er, 3, 2, gamma)
I.er <-  SVAR.sirf.lr.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
source("PS3_SVAR_LR.R")
I.er <-  SVAR.sirf.lr.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
dim(ERPT.boot$lb)
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
par(mfrow = c(1,1))
plot.erpt.boot(ERPT.boot_S2, H.ERPT)
ERPT.boot_S2 <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
par(mfrow = c(1,1))
plot.erpt.boot(ERPT.boot, H.ERPT)
ERPT.boot <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
ERPT.boot <- trans.pw.boot("/", I, 3, 2, gamma)
# ERPT (Bootstrap)
I.er <- SVAR.sirf.lr.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
#I.pc <- trans.pw.boot("-", I.er, 2, 1, gamma)
#I <- list(lb = abind(I.er$lb, I.pc$lb, along = 1), pe = abind(I.er$pe, I.pc$pe, along = 1), ub = abind(I.er$ub, I.pc$ub, along = 1), boot = abind(I.er$boot, I.pc$boot, along = 2))
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
dim(ERPT.boot$lb)
#ERPT.R.boot <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
ERPT.boot_S2 <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
#remove(I.er, I.pc, I, ERPT.boot)
par(mfrow = c(1,1))
plot.erpt.boot(ERPT.boot_S2, H.ERPT)
# 3 Variables #
modelo_1
p <- 2 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 2 # Shock: G
idx.r <- 3 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_1, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
idx.rl <- idx.r # Cum. LHS: Y.tilde
idx.rr <- idx.s # Cum. RHS: G.tilde
# Multiplier
LP.m <- lp.multiplier(modelo_1, p, idx.s, idx.rl, idx.rr, H, gamma)
plot.lp(LP.m)
########################
# 2 Variables #
p <- 3 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 1 # Shock: G
idx.r <- 2 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_2, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
idx.rl <- idx.r # Cum. LHS: Y.tilde
idx.rr <- idx.s # Cum. RHS: G.tilde
# Multiplier
LP.m <- lp.multiplier(modelo_2, p, idx.s, idx.rl, idx.rr, H, gamma)
plot.lp(LP.m)
### Inicio ###
### Para iniciar construyo el Modelo VAR ###
### Este modelo incluye  las variables ####
### Indice de precios externos
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("PS3_LP_Tools.R")
source("PS2_SVAR_Tools.R")
source("PS2_SVAR_Plots.R")
source("PS3_SVAR_Tools.R")
source("PS3_SIRF_Transform.R")
source("PS3_SVAR_LR.R")
source("PS3_LP_Tools.R")
m2 <- read_excel("M2.xls",sheet=2)
m2 = ts(m2[-(1),2], start = c(1986, 1) , frequency = 12)
tdc_nom <- read_excel("tdc_nominal.xls")
tdc_nom = ts(tdc_nom[-(1),2], start = c(2002, 1) , frequency = 12)
ipc <- read.csv("ipc_1943_act.csv")
ipc = ts(ipc[3],start = c(1943,1),frequency = 12)
r_bruta <- read_excel("RemuneracionBruta_OEDE.xlsx")
r_bruta = ts(r_bruta[-(1),3], start = c(1995, 1) , frequency = 12)
dolar_cot <- read.csv("dolar-cot.csv")
dolar_cot = ts(dolar_cot[2], start = c(1995, 1) , frequency = 12)
emae <- read_xls("emae.xls")
emae = ts(emae[-1,3], start = c(2004, 1) , frequency = 12)
p_int <- read_excel("precios_int.xls")
p_int <- ts(p_int[2], start = c(1997, 1) , frequency = 12)
ipc <- window(ipc,start = c(2002,1))
p_int <- window(p_int,start = c(2002,1))
tdc_nom <-window(tdc_nom, start= c(2002,1))
ts.plot(ipc, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Índice de precios al consumidor")
ts.plot(p_int, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Nivel de precios Internacionales")
ts.plot(tdc_nom, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Tasa de cambio nominal")
l_ipc <-log(ipc)
l_p_int <-log(p_int)
l_tdc_n <-log(tdc_nom)
ts.plot(l_ipc, type="l", lwd=2, xlab="",ylab="%",bty="n", main = " Logaritmo Índice de precios al consumidor")
ts.plot(l_p_int, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Logaritmo de los precios  Internacionales")
ts.plot(l_tdc_n, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Logaritmo de la tasa de cambio nominal")
d_l_ipc  <- diff(l_ipc)
d_l_p_int <- diff(l_p_int)
d_l_tdc_n <- diff(l_tdc_n)
ts.plot(d_l_ipc, type="l", lwd=2, xlab="",ylab="%",bty="n", main = " Diff Logaritmo Índice de precios al consumidor")
ts.plot(d_l_p_int, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Diff Logaritmo de los precios  Internacionales")
ts.plot(d_l_tdc_n, type="l", lwd=2, xlab="",ylab="%",bty="n", main = " Diff Logaritmo de la tasa de cambio nominal")
#### Parte 1 ####
# Generamos el modelo completo en el cual tomamos en consideración
### Subsetteeo con tal que omito el problema de los NAN, hasta lo máximo
### que se puede recortat
d_l_ipc <-window(d_l_ipc,start=c(2004,1),end=c(2019,12))
d_l_tdc_n <-window(d_l_tdc_n,start=c(2004,1),end=c(2019,12))
d_l_p_int <-window(d_l_p_int,start=c(2004,1),end=c(2019,12))
modelo_1 <- cbind(d_l_p_int,
d_l_tdc_n,
d_l_ipc)
var_1 <- VARselect(modelo_1, lag.max = 15, type = "const")
var_1
p<- var_1$selection[1]
p
### Bajo el criterio de infomración de Akaike se encuentra que el
### número óptimo de rezagos para este modelo que posee 3 variables
### es igual a  3
### Generamos el modelo y obtenemos las estadísticas sumarias
VAR1 <- VAR(modelo_1, p = p, type = "const")
summary(VAR1)
m <- VAR1$K # Number of variables in the VAR
T <- VAR1$obs # Number of effective sample observations, excluding "p" starting values
### Ploteo los residuos del VAR
e <- resid(VAR1)
e <- ts(e, end = end(modelo_1), frequency = frequency(modelo_1))
colnames(e) <- c(1,2,3)
plot(e, main = "Residuals")
#### Genero esta minifuncion para restringir el feedback hacia
#### las variables locales
matC <- function(m, p, vx) {
vy <- setdiff(1:m, vx)
Cm <- matrix(1, m, m * p + 1)
for (i in vx) {
for (l in 1:p) {
for (j in vy) {
Cm[i, m * (l - 1) + j] <- 0
}
}
}
Cm
}
### Aplico la función para restringir a la matriz####
#### con la función restrict restrinjo el VAR que hize líneas atras
constraints <- matC(m, p, 2)
VAR1 <- restrict(VAR1, method = "man", resmat = constraints)
VAR1
#### Vemos que las raíces unitarias dan menor que uno por lo tanto
#### prosigo
roots(VAR1, modulus = TRUE)
#### Genero las matrices para elaborar el VAR estructural
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
### Creo y asigno el VAR estructural
SVAR <- SVAR(VAR1, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
SVAR
H.ERPT <- 12 # Horizon (ERPT)
ERPT2 <- SVAR.erpt(SVAR, H.ERPT, 3, 2)
plot.erpt2(ERPT2, H.ERPT)
ERPT3 <- SVAR.erpt(SVAR, H.ERPT, 1, 2)
#plot.erpt3(ERPT3, H.ERPT)
####  Modelo modificaado ######
### Ahora elaboro el modelo VAR pero sin un variable ###
### Para esto genero el VAR teniendo en consideracion solo ###
### Este modelo se va a llamar modelo 2 y su VAR ####
### correspondiente se va a designar VAR2####
modelo_2 <- cbind(d_l_tdc_n,
d_l_ipc)
var_2 <- VARselect(modelo_2, lag.max = 15, type = "const")
var_2
p2<- var_2$selection[2]
p2
### El valor de p2, nos dice que los rezagos adecuados son 3
### con esto se va a proceder
### Generamos el modelo y obtenemos las estadísticas sumarias
VAR2 <- VAR(modelo_2, p = p2, type = "const")
summary(VAR2)
m <- VAR2$K # Number of variables in the VAR
T <- VAR2$obs # Number of effective sample observations, excluding "p" starting values
### Ploteo los residuos del VAR
e <- resid(VAR2)
e <- ts(e, end = end(modelo_2), frequency = frequency(modelo_2))
colnames(e) <- c(1,2)
plot(e, main = "Residuals")
#### Genero esta minifuncion para restringir el feedback hacia
#### las variables locales
matC <- function(m, p, vx) {
vy <- setdiff(1:m, vx)
Cm <- matrix(1, m, m * p + 1)
for (i in vx) {
for (l in 1:p) {
for (j in vy) {
Cm[i, m * (l - 1) + j] <- 0
}
}
}
Cm
}
### Aplico la función para restringir a la matriz####
#### con la función restrict restrinjo el VAR que hize líneas atras
constraints <- matC(m, p2, 1)
VAR2 <- restrict(VAR2, method = "man", resmat = constraints)
VAR2
#### Vemos que las raíces unitarias dan menor que uno por lo tanto
#### prosigo
roots(VAR2, modulus = TRUE)
#### Genero las matrices para elaborar el VAR estructural
# A Matrix
Amat <- diag(m)
for (i in 2:m) {
for (j in 1:(i - 1)) {
Amat[i, j] <- NA
}
}
# B Matrix
Bmat <- matrix(0, m, m)
for (i in 1:m) {
Bmat[i, i] <- NA
}
R <- 500 # Number of bootstrap replications
type <- "nonparametric"
gamma <- 0.95 # Confidence level
SVAR2 <- SVAR(VAR2, Amat = Amat, Bmat = Bmat, lrtest= FALSE)
Y.boot <- boot.replicate(VAR2, R, type)
# ERPT (Bootstrap)
I.er <- SVAR.sirf.lr.boot(SVAR2, H.ERPT, gamma, Y.boot, cumulative = TRUE)
#I.pc <- trans.pw.boot("-", I.er, 2, 1, gamma)
#I <- list(lb = abind(I.er$lb, I.pc$lb, along = 1), pe = abind(I.er$pe, I.pc$pe, along = 1), ub = abind(I.er$ub, I.pc$ub, along = 1), boot = abind(I.er$boot, I.pc$boot, along = 2))
ERPT.boot <- trans.pw.boot("/", I.er, 2, 1, gamma)
dim(ERPT.boot$lb)
#ERPT.R.boot <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
ERPT.boot_S2 <- list(lb = 100 * ERPT.boot$lb[1, ], pe = 100 * ERPT.boot$pe[1, ], ub = 100 * ERPT.boot$ub[1, ], boot = 100 * ERPT.boot$boot[, 1, ])
#remove(I.er, I.pc, I, ERPT.boot)
par(mfrow = c(1,1))
plot.erpt.boot(ERPT.boot_S2, H.ERPT)
################################
##### Ejercicio 2 #######
# 3 Variables #
modelo_1
p <- 2 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 2 # Shock: G
idx.r <- 3 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_1, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
idx.rl <- idx.r # Cum. LHS: Y.tilde
idx.rr <- idx.s # Cum. RHS: G.tilde
# Multiplier
LP.m <- lp.multiplier(modelo_1, p, idx.s, idx.rl, idx.rr, H, gamma)
plot.lp(LP.m)
########################
# 2 Variables #
p <- 3 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 1 # Shock: G
idx.r <- 2 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_2, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
idx.rl <- idx.r # Cum. LHS: Y.tilde
idx.rr <- idx.s # Cum. RHS: G.tilde
# Multiplier
LP.m <- lp.multiplier(modelo_2, p, idx.s, idx.rl, idx.rr, H, gamma)
plot.lp(LP.m)
idx.s <- 2 # Shock: G
idx.r <- 3 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_1, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
# 2 Variables #
p <- 3 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 1 # Shock: G
idx.r <- 2 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_2, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
plot.lp(LP.c)
plot.lp(LP.c)
p <- 3 # lag length
H <- 12 # Horizon
gamma <- 0.95 # Confidence level
idx.s <- 1 # Shock: G
idx.r <- 2 # Response: Y
# Cumulative IRF
LP.c <- lp(modelo_2, p, idx.s, idx.r, H, gamma, cumulative = TRUE)
plot.lp(LP.c)
r_bruta
emae <- window(emae,start = c(2004,1),end =c(2019,12))
emae
r_bruta <- window(r_bruta,start =c(2004,1),end =c(2019,12))
emae <- window(emae,start = c(2004,1),end =c(2019,12))
m2 <- windo(m2,star=c(2004,1,end=c(2019,12)))
ts.plot(r_bruta, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Salarios")
ts.plot(emae, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Indice de la actividad economica")
ts.plot(m2, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Cantidad de dinero")
r_bruta <- window(r_bruta,start =c(2004,1),end =c(2019,12))
emae <- window(emae,start = c(2004,1),end =c(2019,12))
m2 <- window(m2,start=c(2004,1,end=c(2019,12)))
ts.plot(r_bruta, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Salarios")
ts.plot(emae, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Indice de la actividad economica")
ts.plot(m2, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Cantidad de dinero")
l_r_bruta <- log(r_bruta)
l_emae <- log(emae)
l_m2 <- log(m2)
ts.plot(l_r_bruta, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Salarios")
ts.plot(l_emae, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Indice de la actividad economica")
ts.plot(l_m2, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Cantidad de dinero")
d_l_r_bruta <- diff(l_r_bruta)
d_l_emae <- diff(l_emae)
d_l_m2 <- diff(l_m2)
ts.plot(d_l_r_bruta, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Salarios")
ts.plot(d_l_emae, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Indice de la actividad economica")
ts.plot(d_l_m2, type="l", lwd=2, xlab="",ylab="%",bty="n", main = "Cantidad de dinero")
remove(list = ls(all.names = TRUE))
gc()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Data ####
source("PS4_Data.R")
Yl.f <- cbind(pcom, er, pc)
Yl.f <- 100 * log(Yl.f) # log transformation
Yd.f <- diff(Yl.f) # log-diff transformation
remove(pcom, er, pc)
Yl <- window(Yl.f, start = c(2003, 01), end = c(2019, 12))
Yd <- window(Yd.f, start = c(2003, 01), end = c(2019, 12))
# BVAR Estimation (Reduced Form) ####
library(BVAR)
p <- 3 # lag order
Y <- Yd
Y <- ts(Y[(12 - p + 1):nrow(Y), ], end = end(Y), frequency = frequency(Y)) # Starting in Jan-04
# Prior Setup: Hyperparamenters
mean.l1 <- 0.3
var.det <- 1e07
# Prior Setup: A) Tight Lambda
pr.minn.A <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.001), alpha = bv_alpha(mode = 2), var = var.det, b = mean.l1)
pr.strc.A <- bv_priors(hyper = "auto", mn = pr.minn.A)
# Prior Setup: A) Tight Lambda
pr.minn.A <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.001), alpha = bv_alpha(mode = 2), var = var.det, b = mean.l1)
pr.strc.A <- bv_priors(hyper = "auto", mn = pr.minn.A)
# Prior Setup: B) Loose Lambda
pr.minn.B <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.1), alpha = bv_alpha(mode = 2), var = var.det, b = mean.l1)
pr.strc.B <- bv_priors(hyper = "auto", mn = pr.minn.B)
# Simulation: Settings
draws <- 5000
burns <- 1000
# Simulation: A) Tight Lambda
BVAR.A <- bvar(data = Y, lags = p, n_draw = draws, n_burn = burns, priors = pr.strc.A, verbose = TRUE)
plot(density(BVAR.A$hyper), main = "Lambda (tight)")
plot(density(BVAR.A$beta[, 3, 3]), main = "Beta-32 (model with tight Lambda prior)")
plot(density(BVAR.A$beta[, 4, 3]), main = "Beta-33 (model with tight Lambda prior)")
plot(density(BVAR.A$sigma[, 3, 3]), main = "Sigma-33 (model with tight Lambda prior)")
# Simulation: B) Loose Lambda
BVAR.B <- bvar(data = Y, lags = p, n_draw = draws, n_burn = burns, priors = pr.strc.B, verbose = TRUE)
plot(density(BVAR.B$hyper), main = "Lambda (loose)")
plot(density(BVAR.B$beta[, 3, 3]), main = "Beta-32 (model with loose Lambda prior)")
plot(density(BVAR.B$beta[, 4, 3]), main = "Beta-33 (model with loose Lambda prior)")
plot(density(BVAR.B$sigma[, 3, 3]), main = "Sigma-33 (model with loose Lambda prior)")
# Forecasting ####
BVAR <- bvar(data = Y, lags = p, n_draw = draws, n_burn = burns, priors = pr.strc.B, verbose = TRUE)
H.forecast <- 24 # Forecast horizon
# Unconditional
forecast.U <- predict(BVAR, horizon = H.forecast, conf_bands = c(0.05, 0.1, 0.2))
plot(forecast.U, area = TRUE, t_back = 48)
# Conditional (on "er")
path <- rep(1, H.forecast / 2)
forecast.C <- predict(BVAR, horizon = H.forecast, cond_path = path, cond_var = "er", conf_bands = c(0.05, 0.1, 0.2))
# Forecasting ####
BVAR <- bvar(data = Y, lags = p, n_draw = draws, n_burn = burns, priors = pr.strc.B, verbose = TRUE)
H.forecast <- 24 # Forecast horizon
# Unconditional
forecast.U <- predict(BVAR, horizon = H.forecast, conf_bands = c(0.05, 0.1, 0.2))
plot(forecast.U, area = TRUE, t_back = 48)
# Conditional (on "er")
path <- rep(1, H.forecast / 2)
forecast.C <- predict(BVAR, horizon = H.forecast, cond_path = path, cond_var = "er", conf_bands = c(0.05, 0.1, 0.2))
plot(forecast.C, area = TRUE, t_back = 48)
source("PS4_SVAR_Analysis.R")
source("PS4_BVAR_Tools.R")
source("PS4_BVAR_Plots.R")
gamma <- 0.95 # Confidence Level
H <- 12 # Horizon
H.ERPT <- 24 # Horizon for ERPT
# IRF
SIRF <- BVAR.sirf(BVAR, H, gamma, cumulative = FALSE)
plot.sirf.bvar(SIRF, BVAR$meta$M, H)
# Cumulative IRF
SIRF.C <- BVAR.sirf(BVAR, H, gamma, cumulative = TRUE)
plot.sirf.bvar(SIRF.C, BVAR$meta$M, H)
# FEVD
FEVD <- BVAR.fevd(BVAR, H, gamma)
plot.fevd.bvar(FEVD, BVAR$meta$M, H)
# HD
HD <- BVAR.hd(BVAR, gamma)
plot.hd.bvar(BVAR$meta$Y, HD, BVAR$meta$M, BVAR$meta$N)
# ERPT
ERPT <- BVAR.erpt(BVAR, 3, 2, H.ERPT, gamma, cumulative = TRUE)
plot.erpt.bvar(ERPT, H.ERPT)
